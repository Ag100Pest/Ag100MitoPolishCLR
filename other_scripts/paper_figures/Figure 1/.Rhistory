scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "h")
plot9
table1$VGP.dataset
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1$VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)
ggplot(GC, aes(group, gc))
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0)))
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1$VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed")
out_gc <- data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, gc = table1$gc1, diff = table1$gc1 - table1$gc2)
out_gc <- out_gc %>% mutate(outlier = paste(sapply(table1$Latin.name, substring, 1, 1), strsplit(as.character(table1$Latin.name), " ") %>% sapply( "[", 2 ), sep=". ")) %>% mutate(is_outlier=ifelse(is_outlier(diff), diff, as.numeric(NA)))
out_gc$outlier[which(is.na(out_gc$is_outlier))] <- as.numeric(NA)
Genbank_gc<-data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, gc = table1$gc1)
GC <- bind_rows("Genbank/RefSeq" = GENBANK_gc, "VGP" = out_gc, .id = "group")
t.test(VGP_gc$gc,GENBANK_gc$gc,paired = TRUE, alternative = "two.sided")
wilcox.test(VGP_gc$gc,GENBANK_gc$gc, paired = TRUE, alternative = "two.sided")
png("Extended Fig. 6.png", width = 2000, height = 2000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1$VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "h")
GC <- bind_rows("Genbank/RefSeq" = Genbank_gc, "VGP" = out_gc, .id = "group")
t.test(VGP_gc$gc,GENBANK_gc$gc,paired = TRUE, alternative = "two.sided")
wilcox.test(VGP_gc$gc,GENBANK_gc$gc, paired = TRUE, alternative = "two.sided")
png("Extended Fig. 6.png", width = 2000, height = 2000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1$VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "h")
png("Extended Fig. 6.png", width = 2000, height = 2000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "h")
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "h")
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
plot7<-ggplot(MISSING, aes(missing)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = MISSING, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = -0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "less"), label.x=1.25, label.y=5, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("# missing genes")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "g")
ggplot(GC, aes(gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
ggplot(GC, aes(group)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
####FIGURE 1g
out_missing <- data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, missing = table1$Genbank_missing.count, diff = table1$Genbank_missing.count - table1$VGP_missing.count)
out_missing <- out_missing %>% mutate(outlier = paste(sapply(table1$Latin.name, substring, 1, 1), strsplit(as.character(table1$Latin.name), " ") %>% sapply( "[", 2 ), sep=". ")) %>% mutate(is_outlier=ifelse(is_outlier(diff), diff, as.numeric(NA)))
out_missing$outlier[which(is.na(out_missing$is_outlier))] <- as.numeric(NA)
VGP_missing<-data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, missing = table1$VGP_missing.count)
MISSING <- bind_rows("Genbank/RefSeq" = out_missing, "VGP" = VGP_missing, .id = "group")
t.test(VGP_missing$missing,out_missing$missing,paired = TRUE, alternative = "less")
wilcox.test(VGP_missing$missing, out_missing$missing, paired = TRUE, alternative = "less")
plot7<-ggplot(MISSING, aes(group, missing)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = MISSING, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = -0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "less"), label.x=1.25, label.y=5, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("# missing genes")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95))) +
labs(tag = "g")
plot7
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
View(DUPLICATED)
out_gc <- data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, gc = table1$gc1, diff = table1$gc1 - table1$gc2)
out_gc <- out_gc %>% mutate(outlier = paste(sapply(table1$Latin.name, substring, 1, 1), strsplit(as.character(table1$Latin.name), " ") %>% sapply( "[", 2 ), sep=". ")) %>% mutate(is_outlier=ifelse(is_outlier(diff), diff, as.numeric(NA)))
out_gc$outlier[which(is.na(out_gc$is_outlier))] <- as.numeric(NA)
Genbank_gc<-data.frame(table1$VGP.dataset,table1$Latin.name,table1$Common.name, gc = table1$gc2)
GC <- bind_rows("Genbank/RefSeq" = Genbank_gc, "VGP" = out_gc, .id = "group")
t.test(VGP_gc$gc,Genbank_gc$gc,paired = TRUE, alternative = "two.sided")
wilcox.test(VGP_gc$gc,Genbank_gc$gc, paired = TRUE, alternative = "two.sided")
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA, position = position_nudge(x = c(0))) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=6, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 1000)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=55, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
png("Extended Fig. 6.png", width = 2000, height = 700)
ggplot(GC, aes(group, gc)) +
geom_boxplot(width=0.5, size=1.5, aes(color=group), outlier.shape = NA) +
geom_point(aes(color=group), size=4) +
geom_line(aes(group=table1.VGP.dataset), colour="darkgray", size = 0.4, linetype = "dashed") +
#geom_label_repel(data = GC, aes(label = outlier), segment.size = 0.2, fontface = "italic",
#                 nudge_x = 0.90, na.rm = TRUE, direction = "y", hjust = 0, label.size = 0, size=12, fill = NA)+
stat_compare_means(paired = TRUE, method.args = list(alternative = "two.sided"), label.x=1.25, label.y=50, size=12)+
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
axis.title.x=element_blank(),
plot.tag = element_text(size = rel(4), face = "bold")
)+
ylab("GC content (%)")+
scale_color_manual(values=c("#335eaa","#ffd700"))+
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE))+
scale_x_discrete(expand = expansion(mult = c(0.6, 0.95)))
dev.off()
