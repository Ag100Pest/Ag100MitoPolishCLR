library(tibble)
library(ggpubr)
library(grid)
library(ggrepel)
table1 <- read.csv("heterozygosity_summary.txt", header=TRUE, sep="\t")
datalist = list()
for (i in 1:ncol(table1)) {
data<-data.frame(cbind.data.frame(colnames(table1[i]), na.omit(table1[i])))
colnames(data)<-c("group","value")
datalist[[i]] <- data
}
HET = do.call(rbind, datalist)
t.test(HET$value, alternative = "greater")
table2 <- read.csv("regions.txt", header=FALSE, sep="\t")
colnames(table2)<-c("species","ID","start","end","type")
table2$match <- paste(table2$ID,"_",table2$type, sep="")
table2$diff <- (table2$end - table2$start)
sd<-table1 %>% lapply(na.omit) %>% lapply(sd)
sd<-do.call(rbind, lapply(sd, as.data.frame))
sd<-tibble::rownames_to_column(sd, "match")
data <- merge(sd,table2,by="match")
#CORRELATION repeat length/variance
cor_length_repeat <- data.frame(data$ID, data$diff, data$`X[[i]]`)
names(cor_length_repeat) <- c("dataset","repeat_size","sd")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "kendall")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "pearson")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "spearman")
ggscatter(cor_length_repeat, x = "repeat_size", y = "sd",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Repeat length (bp)", ylab = "Standard Deviation")
png("Fig. 5.png", width = 2000, height = 1200)
#plot
plot1<-ggplot(HET, aes(x = value, group = group, color = group)) +
geom_area(aes(y = ..density.. * 53),
size = 0.1, stat = 'density', alpha=0.01)+
geom_point(data=HET,aes(y = group), position = position_jitter(w = 0, h = 0.2))+
geom_vline(xintercept=0,
color="black", linetype="dashed", size=1)+
annotate("rect", xmin = -2250, xmax = -1350,  ymin = 0, ymax = Inf, alpha = .1)+
scale_color_manual(values=rev(rainbow(ncol(table1), start = 0.1)))+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 1, ymax = 17, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 17+0.3, ymax = 23, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 23+0.3, ymax = 27, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 27+0.3, ymax = 46, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 46+0.3, ymax = 68, alpha = .5)+
annotate("text", x = max(HET$value)+60+70, y = (1+17)/2, label = "Fishes", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (17+23)/2+0.3, label = "Amphibians", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (23+27)/2+0.3, label = "Reptiles", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (27+46)/2+0.3, label = "Mammals", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (46+68)/2+0.3, label = "Birds", family = "Arial",size = 15, hjust=0)+
theme(
plot.margin = unit(c(1,10,1,1), "lines"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
#axis.ticks.y = element_blank(),
axis.text.y=element_blank()
)+
scale_x_continuous(breaks = scales::pretty_breaks(n = 9), labels=function(x) format(x/1000, big.mark = ",", scientific = FALSE), limits = c(-2300,3900))+
labs(y="Repeat/Species", x = "Length deviation (kbp)")+
geom_text_repel(aes(y=65,label=ifelse(value  == -1970,"C. anna","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=68,label=ifelse(value  == -2032,"H. comata","")), vjust=-2, hjust=-0.2, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=58,label=ifelse(value  == -2177,"C. canorus","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=21,label=ifelse(value  == -1464,"R. temporaria","")), vjust=1.6, hjust=1, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
coord_cartesian(clip = 'off')
#  geom_text(aes(label=group, y=group),hjust=0, vjust=0)
plot1
dev.off()
setwd("~/Documents/VGP/com/papers/mitoVGP/Figure 5/")
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tibble)
library(ggpubr)
library(grid)
library(ggrepel)
table1 <- read.csv("heterozygosity_summary.txt", header=TRUE, sep="\t")
datalist = list()
for (i in 1:ncol(table1)) {
data<-data.frame(cbind.data.frame(colnames(table1[i]), na.omit(table1[i])))
colnames(data)<-c("group","value")
datalist[[i]] <- data
}
HET = do.call(rbind, datalist)
t.test(HET$value, alternative = "greater")
table2 <- read.csv("regions.txt", header=FALSE, sep="\t")
colnames(table2)<-c("species","ID","start","end","type")
table2$match <- paste(table2$ID,"_",table2$type, sep="")
table2$diff <- (table2$end - table2$start)
sd<-table1 %>% lapply(na.omit) %>% lapply(sd)
sd<-do.call(rbind, lapply(sd, as.data.frame))
sd<-tibble::rownames_to_column(sd, "match")
data <- merge(sd,table2,by="match")
#CORRELATION repeat length/variance
cor_length_repeat <- data.frame(data$ID, data$diff, data$`X[[i]]`)
names(cor_length_repeat) <- c("dataset","repeat_size","sd")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "kendall")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "pearson")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "spearman")
ggscatter(cor_length_repeat, x = "repeat_size", y = "sd",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Repeat length (bp)", ylab = "Standard Deviation")
png("Fig. 5.png", width = 2000, height = 1200)
#plot
plot1<-ggplot(HET, aes(x = value, group = group, color = group)) +
geom_area(aes(y = ..density.. * 53),
size = 0.1, stat = 'density', alpha=0.01)+
geom_point(data=HET,aes(y = group), position = position_jitter(w = 0, h = 0.2))+
geom_vline(xintercept=0,
color="black", linetype="dashed", size=1)+
annotate("rect", xmin = -2250, xmax = -1350,  ymin = 0, ymax = Inf, alpha = .1)+
scale_color_manual(values=rev(rainbow(ncol(table1), start = 0.1)))+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 1, ymax = 17, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 17+0.3, ymax = 23, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 23+0.3, ymax = 27, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 27+0.3, ymax = 46, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 46+0.3, ymax = 68, alpha = .5)+
annotate("text", x = max(HET$value)+60+70, y = (1+17)/2, label = "Fishes", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (17+23)/2+0.3, label = "Amphibians", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (23+27)/2+0.3, label = "Reptiles", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (27+46)/2+0.3, label = "Mammals", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (46+68)/2+0.3, label = "Birds", family = "Arial",size = 15, hjust=0)+
theme(
plot.margin = unit(c(1,10,1,1), "lines"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
#axis.ticks.y = element_blank(),
axis.text.y=element_blank()
)+
scale_x_continuous(breaks = scales::pretty_breaks(n = 9), labels=function(x) format(x/1000, big.mark = ",", scientific = FALSE), limits = c(-2300,3900))+
labs(y="Repeat/Species", x = "Length deviation (kbp)")+
geom_text_repel(aes(y=65,label=ifelse(value  == -1970,"C. anna","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=68,label=ifelse(value  == -2032,"H. comata","")), vjust=-2, hjust=-0.2, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=58,label=ifelse(value  == -2177,"C. canorus","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=21,label=ifelse(value  == -1464,"R. temporaria","")), vjust=1.6, hjust=1, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
coord_equal(expand=FALSE) +
coord_cartesian(clip = 'off')
#  geom_text(aes(label=group, y=group),hjust=0, vjust=0)
plot1
dev.off()
setwd("~/Documents/VGP/com/papers/mitoVGP/Figure 5/")
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tibble)
library(ggpubr)
library(grid)
library(ggrepel)
table1 <- read.csv("heterozygosity_summary.txt", header=TRUE, sep="\t")
datalist = list()
for (i in 1:ncol(table1)) {
data<-data.frame(cbind.data.frame(colnames(table1[i]), na.omit(table1[i])))
colnames(data)<-c("group","value")
datalist[[i]] <- data
}
HET = do.call(rbind, datalist)
t.test(HET$value, alternative = "greater")
table2 <- read.csv("regions.txt", header=FALSE, sep="\t")
colnames(table2)<-c("species","ID","start","end","type")
table2$match <- paste(table2$ID,"_",table2$type, sep="")
table2$diff <- (table2$end - table2$start)
sd<-table1 %>% lapply(na.omit) %>% lapply(sd)
sd<-do.call(rbind, lapply(sd, as.data.frame))
sd<-tibble::rownames_to_column(sd, "match")
data <- merge(sd,table2,by="match")
#CORRELATION repeat length/variance
cor_length_repeat <- data.frame(data$ID, data$diff, data$`X[[i]]`)
names(cor_length_repeat) <- c("dataset","repeat_size","sd")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "kendall")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "pearson")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "spearman")
ggscatter(cor_length_repeat, x = "repeat_size", y = "sd",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Repeat length (bp)", ylab = "Standard Deviation")
png("Fig. 5.png", width = 2000, height = 1200)
#plot
plot1<-ggplot(HET, aes(x = value, group = group, color = group)) +
geom_area(aes(y = ..density.. * 53),
size = 0.1, stat = 'density', alpha=0.01)+
geom_point(data=HET,aes(y = group), position = position_jitter(w = 0, h = 0.2))+
geom_vline(xintercept=0,
color="black", linetype="dashed", size=1)+
annotate("rect", xmin = -2250, xmax = -1350,  ymin = 0, ymax = Inf, alpha = .1)+
scale_color_manual(values=rev(rainbow(ncol(table1), start = 0.1)))+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 1, ymax = 17, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 17+0.3, ymax = 23, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 23+0.3, ymax = 27, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 27+0.3, ymax = 46, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 46+0.3, ymax = 68, alpha = .5)+
annotate("text", x = max(HET$value)+60+70, y = (1+17)/2, label = "Fishes", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (17+23)/2+0.3, label = "Amphibians", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (23+27)/2+0.3, label = "Reptiles", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (27+46)/2+0.3, label = "Mammals", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (46+68)/2+0.3, label = "Birds", family = "Arial",size = 15, hjust=0)+
theme(
plot.margin = unit(c(1,10,1,1), "lines"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
#axis.ticks.y = element_blank(),
axis.text.y=element_blank()
)+
scale_x_continuous(breaks = scales::pretty_breaks(n = 9), labels=function(x) format(x/1000, big.mark = ",", scientific = FALSE), limits = c(-2300,3900), expand=c(0,0))+
labs(y="Repeat/Species", x = "Length deviation (kbp)")+
geom_text_repel(aes(y=65,label=ifelse(value  == -1970,"C. anna","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=68,label=ifelse(value  == -2032,"H. comata","")), vjust=-2, hjust=-0.2, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=58,label=ifelse(value  == -2177,"C. canorus","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=21,label=ifelse(value  == -1464,"R. temporaria","")), vjust=1.6, hjust=1, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
coord_cartesian(clip = 'off')
#  geom_text(aes(label=group, y=group),hjust=0, vjust=0)
plot1
dev.off()
setwd("~/Documents/VGP/com/papers/mitoVGP/Figure 5/")
library(ggplot2)
library(dplyr)
library(tidyr)
library(scales)
library(tibble)
library(ggpubr)
library(grid)
library(ggrepel)
table1 <- read.csv("heterozygosity_summary.txt", header=TRUE, sep="\t")
datalist = list()
for (i in 1:ncol(table1)) {
data<-data.frame(cbind.data.frame(colnames(table1[i]), na.omit(table1[i])))
colnames(data)<-c("group","value")
datalist[[i]] <- data
}
HET = do.call(rbind, datalist)
t.test(HET$value, alternative = "greater")
table2 <- read.csv("regions.txt", header=FALSE, sep="\t")
colnames(table2)<-c("species","ID","start","end","type")
table2$match <- paste(table2$ID,"_",table2$type, sep="")
table2$diff <- (table2$end - table2$start)
sd<-table1 %>% lapply(na.omit) %>% lapply(sd)
sd<-do.call(rbind, lapply(sd, as.data.frame))
sd<-tibble::rownames_to_column(sd, "match")
data <- merge(sd,table2,by="match")
#CORRELATION repeat length/variance
cor_length_repeat <- data.frame(data$ID, data$diff, data$`X[[i]]`)
names(cor_length_repeat) <- c("dataset","repeat_size","sd")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "kendall")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "pearson")
cor(cor_length_repeat$repeat_size, cor_length_repeat$sd, method = "spearman")
ggscatter(cor_length_repeat, x = "repeat_size", y = "sd",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Repeat length (bp)", ylab = "Standard Deviation")
png("Fig. 5.png", width = 2000, height = 1200)
#plot
plot1<-ggplot(HET, aes(x = value, group = group, color = group)) +
geom_area(aes(y = ..density.. * 53),
size = 0.1, stat = 'density', alpha=0.01)+
geom_point(data=HET,aes(y = group), position = position_jitter(w = 0, h = 0.2))+
geom_vline(xintercept=0,
color="black", linetype="dashed", size=1)+
annotate("rect", xmin = -2250, xmax = -1350,  ymin = 0, ymax = Inf, alpha = .1)+
scale_color_manual(values=rev(rainbow(ncol(table1), start = 0.1)))+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 1, ymax = 17, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 17+0.3, ymax = 23, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 23+0.3, ymax = 27, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 27+0.3, ymax = 46, alpha = .5)+
annotate("rect", xmin = max(HET$value)+50, xmax = max(HET$value)+80,  ymin = 46+0.3, ymax = 68, alpha = .5)+
annotate("text", x = max(HET$value)+60+70, y = (1+17)/2, label = "Fishes", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (17+23)/2+0.3, label = "Amphibians", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (23+27)/2+0.3, label = "Reptiles", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (27+46)/2+0.3, label = "Mammals", family = "Arial",size = 15, hjust=0) +
annotate("text", x = max(HET$value)+60+70, y = (46+68)/2+0.3, label = "Birds", family = "Arial",size = 15, hjust=0)+
theme(
plot.margin = unit(c(1,15,1,1), "lines"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
legend.position = "none",
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
#axis.ticks.y = element_blank(),
axis.text.y=element_blank()
)+
scale_x_continuous(breaks = scales::pretty_breaks(n = 9), labels=function(x) format(x/1000, big.mark = ",", scientific = FALSE), limits = c(-2300,3900), expand=c(0,0))+
labs(y="Repeat/Species", x = "Length deviation (kbp)")+
geom_text_repel(aes(y=65,label=ifelse(value  == -1970,"C. anna","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=68,label=ifelse(value  == -2032,"H. comata","")), vjust=-2, hjust=-0.2, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=58,label=ifelse(value  == -2177,"C. canorus","")), vjust=0, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
geom_text_repel(aes(y=21,label=ifelse(value  == -1464,"R. temporaria","")), vjust=1.6, hjust=1, family = "Arial",size = 10, hjust=0, color="black", fontface = "italic", segment.color = NA)+
coord_cartesian(clip = 'off')
#  geom_text(aes(label=group, y=group),hjust=0, vjust=0)
plot1
dev.off()
library(dplyr)
library(ggplot2)
library(broom)
library(lawstat)
setwd("~/Documents/VGP/com/papers/mitoVGP/LMM/")
mitoVGP <- read.csv("mitoVGP results - Metadata.csv", header = TRUE, sep = ",", na.strings="")
with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group, Library.prep...Size.selection.kbp..Pacbio.))
with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group))
is.factor(mitoVGP$Size.selection.cutoff)
mitoVGP$Total.raw.data..Gbp. <- as.numeric(mitoVGP$Total.raw.data..Gbp.)
is.factor(mitoVGP$Total.raw.data..Gbp.)
mitoVGP <- mutate(mitoVGP, Size.selection.cutoff = ifelse(Library.prep...Size.selection.kbp..Pacbio. > 20, "Above 20", "Below 20"))
mitoVGP$Size.selection.cutoff <- as.factor(mitoVGP$Size.selection.cutoff)
mitoVGP <- mitoVGP %>%
mutate(Success = ifelse(Success == "no",0,1))
ggplot(mitoVGP, aes(x=Tissue.type..Pacbio., y=Available.Pacbio.mtDNA.reads)) +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=4)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("")+
ylab("Number of Pacbio reads")
plot(mitoVGP$Success, mitoVGP$Available.Pacbio.mtDNA.reads)
plot(mitoVGP$Taxonomic.group, mitoVGP$Available.Pacbio.mtDNA.reads)
#Q <- quantile(mitoVGP$N.Pacbio.reads, probs=c(.25, .75), na.rm = FALSE)
#iqr <- IQR(mitoVGP$N.Pacbio.reads)
#mitoVGP_nooutliers<- subset(mitoVGP, mitoVGP$N.Pacbio.reads > (Q[1] - 1.5*iqr) & mitoVGP$N.Pacbio.reads < (Q[2]+1.5*iqr))
mod.mitoVGP <- glm(Success ~ Available.Pacbio.mtDNA.reads, family="binomial", data=mitoVGP)
summary(mod.mitoVGP)
anova(mod.mitoVGP, test="Chi")
ggplot(mitoVGP, aes(x = Available.Pacbio.mtDNA.reads, y = Success))  +
stat_sum() +
geom_smooth(method = "glm", formula = y ~ x, se = FALSE,
method.args = list(family = binomial()), colour = "gray")+
scale_x_continuous(name="Number of long mtDNA reads", trans='sqrt')+
scale_y_continuous(name="Success", breaks = c(0, 1), labels = c("Failure", "Success"))+
scale_size_continuous(name = "Counts:")
#r2
nullmod <- glm(Success ~ 0, family="binomial", data=mitoVGP)
1-logLik(mod.mitoVGP)/logLik(nullmod)
#dist
hist(mitoVGP$Available.Pacbio.mtDNA.reads)
hist(sqrt(mitoVGP$Available.Pacbio.mtDNA.reads))
#N reads by tissue type, taxonomic group, size selection, DNA extraction, Library prep fragmentation, library prep
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Library.prep...Size.selection.kbp..Pacbio. + DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
summary(mod.mitoVGP)
af <- anova(mod.mitoVGP)
af
afss <- af$"Sum Sq"
print(cbind(af,PctExp=afss/sum(afss)*100))
mean(mod.mitoVGP$residuals)
acf(mod.mitoVGP$residuals)
lawstat::runs.test(mod.mitoVGP$residuals)
alias(mod.mitoVGP)
ggplot(mod.mitoVGP, aes(Library.prep...Size.selection.kbp..Pacbio., Available.Pacbio.mtDNA.reads)) +
geom_point() +
stat_smooth(method = lm, se = FALSE) +
geom_segment(aes(xend = Library.prep...Size.selection.kbp..Pacbio., yend = .fitted), color = "red", size = 0.3)
par(mfrow = c(2, 2))
plot(mod.mitoVGP)
plot(mod.mitoVGP, 4, id.n = 5)
model.diag.metrics <- augment(mod.mitoVGP)
head(model.diag.metrics)
model.diag.metrics <- model.diag.metrics %>%
mutate(index = 1:nrow(model.diag.metrics)) %>%
select(index, everything(), -.se.fit, -.sigma)
#success by tissue type, taxonomic group and size selection (as 20 kbp cutoff)
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Size.selection.cutoff+ DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
summary(mod.mitoVGP)
af <- anova(mod.mitoVGP)
af
afss <- af$"Sum Sq"
print(cbind(af,PctExp=afss/sum(afss)*100))
#success by tissue type, taxonomic group and size selection (as 20 kbp cutoff)
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Size.selection.cutoff+ DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
summary(mod.mitoVGP)
af <- anova(mod.mitoVGP)
af
#success by tissue type, taxonomic group and size selection (as 20 kbp cutoff)
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Size.selection.cutoff+ DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
summary(mod.mitoVGP)
af <- anova(mod.mitoVGP)
af
afss <- af$"Sum Sq"
print(cbind(af,PctExp=afss/sum(afss)*100))
library(dplyr)
library(ggplot2)
library(broom)
library(lawstat)
setwd("~/Documents/VGP/com/papers/mitoVGP/submission_version/LM/")
mitoVGP <- read.csv("mitoVGP results - Metadata.csv", header = TRUE, sep = ",", na.strings="")
out1<-with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group, Size.selection.kbp..Pacbio.))
out2<-with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group))
out3<-with(mitoVGP, table(Tissue.type..Pacbio., Success))
out4<-with(mitoVGP, table(Size.selection.kbp..Pacbio., Success))
out5<-with(mitoVGP, table(Size.selection.cutoff, Success))
write.table(out2, file='../Supplementary Tables/ST3.tsv', quote=FALSE, sep='\t')
write.table(out3, file='../Supplementary Tables/ST5.tsv', quote=FALSE, sep='\t')
View(mitoVGP)
mitoVGP <- read.csv("mitoVGP results - Metadata.csv", header = TRUE, sep = ",", na.strings="")
is.factor(mitoVGP$Size.selection.cutoff)
mitoVGP$Total.raw.data..Gbp. <- as.numeric(mitoVGP$Total.raw.data..Gbp.)
is.factor(mitoVGP$Total.raw.data..Gbp.)
mitoVGP <- mutate(mitoVGP, Size.selection.cutoff = ifelse(Size.selection.kbp..Pacbio. > 20, "Above 20", "Below 20"))
mitoVGP$Size.selection.cutoff <- as.factor(mitoVGP$Size.selection.cutoff)
out1<-with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group, Size.selection.kbp..Pacbio.))
out2<-with(mitoVGP, table(Tissue.type..Pacbio., Taxonomic.group))
out3<-with(mitoVGP, table(Tissue.type..Pacbio., Success))
out4<-with(mitoVGP, table(Size.selection.kbp..Pacbio., Success))
out5<-with(mitoVGP, table(Size.selection.cutoff, Success))
write.table(out2, file='../Supplementary Tables/ST3.tsv', quote=FALSE, sep='\t')
write.table(out3, file='../Supplementary Tables/ST5.tsv', quote=FALSE, sep='\t')
write.table(out4, file='../Supplementary Tables/ST6a.tsv', quote=FALSE, sep='\t')
write.table(out5, file='../Supplementary Tables/ST6b.tsv', quote=FALSE, sep='\t')
mitoVGP <- mitoVGP %>%
mutate(Success = ifelse(Success == "no",0,1))
png("../Extended Data Fig. 3/Extended Data Fig. 3.png", width = 2000, height = 750)
ggplot(mitoVGP, aes(x=reorder(Tissue.type..Pacbio., -Available.Pacbio.mtDNA.reads),  y=Available.Pacbio.mtDNA.reads)) +
geom_boxplot(outlier.colour="black", outlier.shape=8,
outlier.size=4)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("")+
ylab("Number of Pacbio reads")+
theme(
plot.margin = margin(t = 20, b = 0),
axis.title = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
)
dev.off()
plot(mitoVGP$Success, mitoVGP$Available.Pacbio.mtDNA.reads)
plot(mitoVGP$Taxonomic.group, mitoVGP$Available.Pacbio.mtDNA.reads)
mod.mitoVGP <- glm(Success ~ Available.Pacbio.mtDNA.reads, family="binomial", data=mitoVGP)
summary(mod.mitoVGP)
anova(mod.mitoVGP, test="Chi")
png("../Extended Data Fig. 2/Extended Data Fig. 2.png", width = 2000, height = 750)
mitoVGP %>%
mutate(size = ifelse(Available.Pacbio.mtDNA.reads < 1, "0", ">0")) %>%
ggplot(aes(x = Available.Pacbio.mtDNA.reads, y = Success, colour = size))  +
stat_sum() +
geom_smooth(method = "glm", formula = y ~ x, se = FALSE,
method.args = list(family = binomial()), colour = "gray")+
scale_x_continuous(trans='sqrt', breaks = c(100,200,300,400,500))+
scale_color_manual(values = c('green', 'red'))+
scale_y_continuous(name="Success", breaks = c(0, 1), labels = c("Failure", "Success"))+
scale_size_continuous(range = c(5, 15))+
xlab("Number of Pacbio reads")+
theme(
plot.margin = margin(t = 20, b = 0),
axis.title.x = element_text(family = "Arial",
size = rel(4),colour = "black"),
axis.title.y = element_blank(),
axis.text = element_text(family = "Arial",
size = rel(4), colour = "black"),
axis.ticks.length = unit(.50, "cm"),
axis.ticks = element_line(colour = "black", size=(0.6)),
legend.text=element_text(size=30),
legend.title=element_blank()
)+
guides(colour = guide_legend(override.aes = list(size=10)))
dev.off()
#r2
nullmod <- glm(Success ~ 0, family="binomial", data=mitoVGP)
1-logLik(mod.mitoVGP)/logLik(nullmod)
#dist
hist(mitoVGP$Available.Pacbio.mtDNA.reads)
hist(sqrt(mitoVGP$Available.Pacbio.mtDNA.reads))
#N reads by tissue type, taxonomic group, size selection, DNA extraction, Library prep fragmentation, library prep
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Size.selection.kbp..Pacbio. + DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
summary(mod.mitoVGP)
af <- anova(mod.mitoVGP)
af
afss <- af$"Sum Sq"
M2<-cbind(af,PctExp=afss/sum(afss)*100)
M2
write.table(M2, file='../Supplementary Tables/ST4.tsv', quote=FALSE, sep='\t')
mean(mod.mitoVGP$residuals)
acf(mod.mitoVGP$residuals)
lawstat::runs.test(mod.mitoVGP$residuals)
alias(mod.mitoVGP)
ggplot(mod.mitoVGP, aes(Size.selection.kbp..Pacbio., Available.Pacbio.mtDNA.reads)) +
geom_point() +
stat_smooth(method = lm, se = FALSE) +
geom_segment(aes(xend = Size.selection.kbp..Pacbio., yend = .fitted), color = "red", size = 0.3)
par(mfrow = c(2, 2))
plot(mod.mitoVGP)
plot(mod.mitoVGP, 4, id.n = 5)
model.diag.metrics <- augment(mod.mitoVGP)
head(model.diag.metrics)
model.diag.metrics <- model.diag.metrics %>%
mutate(index = 1:nrow(model.diag.metrics)) %>%
select(index, everything(), -.se.fit, -.sigma)
#success by tissue type, taxonomic group and size selection (as 20 kbp cutoff)
mod.mitoVGP <- lm(Available.Pacbio.mtDNA.reads ~ Tissue.type..Pacbio. * Taxonomic.group + Size.selection.cutoff+ DNA.extraction..Pacbio. + Library.prep...fragmentation..Pacbio. + Library.prep..Pacbio. + Total.raw.data..Gbp., data=mitoVGP)
